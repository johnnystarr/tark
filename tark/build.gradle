/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Kotlin application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.1/userguide/building_java_projects.html
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'com.jetbrains.exposed.gradle.plugin' version '0.2.1'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation platform('org.jetbrains.kotlin:kotlin-bom')
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'org.flywaydb:flyway-core:8.5.4'
    implementation 'org.postgresql:postgresql:42.3.3'
    implementation 'com.zaxxer:HikariCP:5.0.1'
    implementation("org.jetbrains.exposed:exposed-core:$exposedVersion")
    implementation("org.jetbrains.exposed:exposed-dao:$exposedVersion")
    implementation("org.jetbrains.exposed:exposed-jdbc:$exposedVersion")
}

testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use Kotlin Test test framework
            useKotlinTest()
        }
    }
}

application {
    // Define the main class for the application.
    mainClass = 'io.johnnystarr.tark.AppKt'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': rootProject.name, 'Implementation-Version': version)
    }
    baseName = rootProject.name
}

compileKotlin {
    kotlinOptions.jvmTarget = '11'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '11'
}

exposedCodeGeneratorConfig {
    propertiesFilename = "exposedPluginProps.properties"
    configFilename = "exposedConf.yml"
}

sourceSets.main {
    java.srcDirs("build/tables")
}

task deleteFlywaySchema {
    delete "${project.buildDir}/tables/io/johnnystarr/tark/Public.flywaySchemaHistory.kt"
}

tasks.named("deleteFlywaySchema") {
    it.dependsOn("generateExposedCode")
}

build.dependsOn("deleteFlywaySchema")

group = 'io.johnnystarr'
version = '0.0.2'